import java.time.Duration

buildscript {
    ext.kotlin_version = '1.8.10'
    ext.hilt_version = '2.45'
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url 'https://jitpack.io' }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "com.jaredsburrows:gradle-spoon-plugin:1.6.0"
        classpath "io.github.gradle-nexus:publish-plugin:1.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
    }
}

apply plugin: "io.github.gradle-nexus.publish-plugin"


ext {
    targetSdkVersion = 33
    buildToolsVersion = '33.0.0'
    minSdkVersion = '14'

    robolectricVersion = '4.9.2'

    snapshotRepository = "https://oss.sonatype.org/content/repositories/snapshots"
    releaseRepository = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

    isSnapshot = {project.version.endsWith('-SNAPSHOT')}
}



allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        maven {
            url snapshotRepository
        }
        maven {
            url releaseRepository
        }
    }
    version = "4.11.0-SNAPSHOT"
    ext.cucumber_javaVersion = '4.8.1'
    group = 'io.cucumber'
}


nexusPublishing {
    repositories {
        sonatype {
            username = findProperty("nexusUsername")
            password = findProperty("nexusPassword")
        }
    }
    connectTimeout = Duration.ofMinutes(5)
    clientTimeout = Duration.ofMinutes(5)
}


subprojects { subproject ->


    ext.addAndroidConfig ={
        android {
            compileSdkVersion rootProject.ext.targetSdkVersion
            buildToolsVersion rootProject.ext.buildToolsVersion

            defaultConfig {
                minSdkVersion rootProject.ext.minSdkVersion
                targetSdkVersion rootProject.ext.targetSdkVersion
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }

            lintOptions {
                abortOnError false
            }

            testOptions {
                unitTests {
                    includeAndroidResources = true
                }
            }
        }
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions {
                jvmTarget = "1.8"
            }
        }

    }

    ext.addLibraryPublishing = { pomName ->

        apply plugin: 'signing'
        apply plugin: 'maven-publish'
        android {
            namespace = "io.cucumber.android.${subproject.name.replace("-","_")}"

            publishing {
                singleVariant('release') {
                    withSourcesJar()
                    withJavadocJar()
                }
            }

        }

        afterEvaluate{

            publishing {
                publications {
                    release(MavenPublication) {
                        from components.release

                        pom {
                            name = pomName
                            packaging = 'aar'
                            // optionally artifactId can be defined here
                            description = 'Android support for Cucumber-JVM'
                            url = 'https://github.com/cucumber/cucumber-android'

                            scm {
                                connection = 'scm:git:https://github.com/cucumber/cucumber-android.git'
                                developerConnection = 'scm:git:git@github.com:cucumber/cucumber-android.git'
                                url = 'https://github.com/cucumber/cucumber-android'
                            }

                            licenses {
                                license {
                                    name = 'MIT License'
                                    url = 'http://www.opensource.org/licenses/mit-license'
                                }
                            }

                            developers {
                                developer {
                                    id = 'lsuski'
                                    name = '≈Åukasz Suski'
                                    email = 'lukasz.suski@finanteq.com'
                                }
                            }
                        }
                    }
                }
            }
            signing {
                def signingKey = findProperty("signingKey")
                def signingPassword = findProperty("signingPassword")
                useInMemoryPgpKeys(signingKey, signingPassword)
                sign publishing.publications.release
            }
        }


    }
}
